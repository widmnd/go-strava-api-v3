// Code generated by go-swagger; DO NOT EDIT.

package segment_efforts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/widmnd/go-strava-api-v3/models"
)

// GetSegmentEffortByIDReader is a Reader for the GetSegmentEffortByID structure.
type GetSegmentEffortByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSegmentEffortByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSegmentEffortByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSegmentEffortByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSegmentEffortByIDOK creates a GetSegmentEffortByIDOK with default headers values
func NewGetSegmentEffortByIDOK() *GetSegmentEffortByIDOK {
	return &GetSegmentEffortByIDOK{}
}

/*GetSegmentEffortByIDOK handles this case with default header values.

Representation of a segment effort.
*/
type GetSegmentEffortByIDOK struct {
	Payload *models.DetailedSegmentEffort
}

func (o *GetSegmentEffortByIDOK) Error() string {
	return fmt.Sprintf("[GET /segment_efforts/{id}][%d] getSegmentEffortByIdOK  %+v", 200, o.Payload)
}

func (o *GetSegmentEffortByIDOK) GetPayload() *models.DetailedSegmentEffort {
	return o.Payload
}

func (o *GetSegmentEffortByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DetailedSegmentEffort)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSegmentEffortByIDDefault creates a GetSegmentEffortByIDDefault with default headers values
func NewGetSegmentEffortByIDDefault(code int) *GetSegmentEffortByIDDefault {
	return &GetSegmentEffortByIDDefault{
		_statusCode: code,
	}
}

/*GetSegmentEffortByIDDefault handles this case with default header values.

Unexpected error.
*/
type GetSegmentEffortByIDDefault struct {
	_statusCode int

	Payload *models.Fault
}

// Code gets the status code for the get segment effort by Id default response
func (o *GetSegmentEffortByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetSegmentEffortByIDDefault) Error() string {
	return fmt.Sprintf("[GET /segment_efforts/{id}][%d] getSegmentEffortById default  %+v", o._statusCode, o.Payload)
}

func (o *GetSegmentEffortByIDDefault) GetPayload() *models.Fault {
	return o.Payload
}

func (o *GetSegmentEffortByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fault)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
